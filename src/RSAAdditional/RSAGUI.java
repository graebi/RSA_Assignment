/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RSAAdditional;

import java.math.BigInteger;
import java.util.Random;

/**
 *
 * @author Thorsten
 */
public class RSAGUI extends javax.swing.JFrame {

    
    int e =1;//e coprime to m variable
    
    int phi =0;//m = phi (p-1) * (q-1)
    
    // d
    int d=0;
    
    int PublicKeyN, PublicKeyE, PrivateKeyN, PrivateKeyD;
    //Prime number variable
    int primeNR1, primeNR2;

    
    /**
     * Creates new form RSAGUI
     */
    public RSAGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrime = new javax.swing.JPanel();
        prime1Label = new javax.swing.JLabel();
        prime2Label = new javax.swing.JLabel();
        prime1Button = new javax.swing.JButton();
        prime2Button = new javax.swing.JButton();
        createKeyButton = new javax.swing.JButton();
        publicKeyLabel = new javax.swing.JLabel();
        privateKeyLabel = new javax.swing.JLabel();
        jLabelPublicKeyE = new javax.swing.JLabel();
        jLabelPublicKeyN = new javax.swing.JLabel();
        createPrivateKeyButton1 = new javax.swing.JButton();
        jLabelPrivateKeyD = new javax.swing.JLabel();
        jLabelPrivateKeyN = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RSA Assignment");

        jPanelPrime.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prime Numbers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanelPrime.setToolTipText("");

        prime1Label.setLabelFor(prime1Label);
        prime1Label.setText("Prime number 1 is:");

        prime2Label.setLabelFor(prime2Label);
        prime2Label.setText("Prime number 2 is:");

        prime1Button.setText("Generate prime number 1");
        prime1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prime1ButtonActionPerformed(evt);
            }
        });

        prime2Button.setText("Generate prime number 2");
        prime2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prime2ButtonActionPerformed(evt);
            }
        });

        createKeyButton.setText("Create public key");
        createKeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPublicKeyButtonActionPerformed(evt);
            }
        });

        publicKeyLabel.setLabelFor(prime1Label);
        publicKeyLabel.setText("Public Key is:");

        privateKeyLabel.setLabelFor(prime1Label);
        privateKeyLabel.setText("Private Key is:");

        jLabelPublicKeyE.setText("E: ");

        jLabelPublicKeyN.setText("N: ");

        createPrivateKeyButton1.setText("Create private key");
        createPrivateKeyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPrivateKeyButton1createPublicKeyButtonActionPerformed(evt);
            }
        });

        jLabelPrivateKeyD.setText("D:");

        jLabelPrivateKeyN.setText("N: ");

        javax.swing.GroupLayout jPanelPrimeLayout = new javax.swing.GroupLayout(jPanelPrime);
        jPanelPrime.setLayout(jPanelPrimeLayout);
        jPanelPrimeLayout.setHorizontalGroup(
            jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrimeLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrimeLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPublicKeyN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPublicKeyE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelPrimeLayout.createSequentialGroup()
                        .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrimeLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(prime1Button))
                            .addComponent(createKeyButton)
                            .addGroup(jPanelPrimeLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(publicKeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPrimeLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(prime1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(126, 126, 126)
                        .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prime2Button)
                            .addComponent(createPrivateKeyButton1)
                            .addGroup(jPanelPrimeLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prime2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(privateKeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabelPrivateKeyN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                        .addComponent(jLabelPrivateKeyD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addGap(126, 126, 126))
        );
        jPanelPrimeLayout.setVerticalGroup(
            jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrimeLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prime1Button)
                    .addComponent(prime2Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prime1Label)
                    .addComponent(prime2Label))
                .addGap(18, 18, 18)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createKeyButton)
                    .addComponent(createPrivateKeyButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publicKeyLabel)
                    .addComponent(privateKeyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPublicKeyE)
                    .addComponent(jLabelPrivateKeyD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPrimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPublicKeyN)
                    .addComponent(jLabelPrivateKeyN))
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanelPrime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanelPrime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prime1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prime1ButtonActionPerformed
        
        while (true) {
            //create random number between 500 - 700 -start with the min of 500
            int prime1 = (int) (Math.random() * (700 - 500) + 500);
            if(isPrime(prime1)){
                this.prime1Label.setText(""+prime1);               
                primeNR1 = prime1;//delete later and also the declaration
                break;
            }//end loop
        }      
    }//GEN-LAST:event_prime1ButtonActionPerformed

    private void prime2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prime2ButtonActionPerformed
        while (true) {
            int prime2 = (int) (Math.random() * (700 - 500) + 500);
            if(isPrime(prime2)){
                this.prime2Label.setText(""+prime2);
                primeNR2 = prime2;//delete later and also the declaration
                break;
            }//end loop
        }
    }//GEN-LAST:event_prime2ButtonActionPerformed

    private void createPublicKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPublicKeyButtonActionPerformed

        int number1 = Integer.parseInt((this.prime1Label.getText()));
       // this.publicKeyLabel.setText(""+number1);//delete this is a test
        int number2 = Integer.parseInt((this.prime2Label.getText()));
      //  this.privateKeyLabel.setText(""+number2);//delete this is a test
        
        //2)Calculate n = pq
        int n = number1 * number2;
        
        //3)Pick another number e such that e and (p-1)(q-1) are relatively prime.
        int m = (number1 - 1)* (number2 - 1);
            phi=m;
        
        
        //http://pajhome.org.uk/crypt/rsa/rsa.html
        //Relative prime number calculation - run loop as long relative prime of e and m is not 1
        //increase e by one and run GCD - 
        //e coprime to m, means that the largest number that can exactly divide both e and m (their greatest common divisor, or GCD) is 1
        do{
            ++e;   
        }while(gcd(m,e)!=1);
        PublicKeyE = e;
        PublicKeyN = n;
        //Display value of e + n
        this.jLabelPublicKeyE.setText(""+PublicKeyE);
        this.jLabelPublicKeyN.setText(""+PublicKeyN);

    }//GEN-LAST:event_createPublicKeyButtonActionPerformed

    private void createPrivateKeyButton1createPublicKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPrivateKeyButton1createPublicKeyButtonActionPerformed

        //Calculate d such that ed = 1 mod (p-1)(q-1) {i.e. d = e-1 mod (p-1)(q-1) }
        //same as ed = 1 mod phi --> d = 1 mod phi / e
        // Apply Extended Euclidian Alghorithm 
        for (int i=0;i<phi;i++){
            if (((phi * i)+1) % e == 0) {
            d = i;
           break;
           }
        }
        PrivateKeyD = d;
        PrivateKeyN = PublicKeyN;
        
        this.jLabelPrivateKeyD.setText(""+PrivateKeyD);
        this.jLabelPrivateKeyN.setText(""+PrivateKeyN);
        // TODO add your handling code here:
    }//GEN-LAST:event_createPrivateKeyButton1createPublicKeyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RSAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RSAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RSAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RSAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RSAGUI().setVisible(true);
                
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createKeyButton;
    private javax.swing.JButton createPrivateKeyButton1;
    private javax.swing.JLabel jLabelPrivateKeyD;
    private javax.swing.JLabel jLabelPrivateKeyN;
    private javax.swing.JLabel jLabelPublicKeyE;
    private javax.swing.JLabel jLabelPublicKeyN;
    private javax.swing.JPanel jPanelPrime;
    private javax.swing.JButton prime1Button;
    private javax.swing.JLabel prime1Label;
    private javax.swing.JButton prime2Button;
    private javax.swing.JLabel prime2Label;
    private javax.swing.JLabel privateKeyLabel;
    private javax.swing.JLabel publicKeyLabel;
    // End of variables declaration//GEN-END:variables


    //Prime number calculation
    private boolean isPrime(int n) {
        int i;
        for(i=2;i<=Math.sqrt(n);i++){
           if(n % i == 0){
               return false;
           }
       }
       return true;
        
    }//end boolean
   
    
    //GCD calculation
    //http://stackoverflow.com/questions/28575416/finding-out-if-two-numbers-are-relatively-prime
    private int gcd(int a, int b)
    {
        int t;
        while (b !=0)
        {
            t = a;
            a = b;
            b = t%b;
        }
        return a;
        
    }//End GCD
  
    
}//end main